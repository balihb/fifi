buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:3.3.4"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE"
    }
}

plugins {
    id 'java-library'
    id 'eclipse'
}

ext {
    springBootVersion = '2.1.3.RELEASE'
}

apply plugin: 'org.openapi.generator'
apply plugin: "io.spring.dependency-management"

sourceSets {
    main {
        java { srcDirs += [ "${buildDir}/generated/src/main/java" ]
        }
    }
    aws {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    aws
    awsImplementation.extendsFrom implementation
}

task awsJar(type:Jar) {
    archiveBaseName = 'fifi'
    archiveAppendix = 'fib-api-aws'
    from sourceSets.aws.output
}

artifacts {
    aws awsJar
}

eclipse {
    classpath {
      //you can tweak the classpath of the Eclipse project by adding extra configurations:
      plusConfigurations += [ configurations.awsCompileClasspath ]
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    awsImplementation 'com.amazonaws:aws-java-sdk-lambda'

    testImplementation 'junit:junit:4.12'
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        mavenBom('com.amazonaws:aws-java-sdk-bom:1.11.510')
    }
}

repositories {
    jcenter()
}

openApiValidate {
    inputSpec = "${sourceSets.main.resources.srcDirs.find{ file("${it}/openapi.yaml").exists()}}/openapi.yaml".toString()
}

openApiGenerate {
    generatorName = "spring"
    verbose = false
    inputSpec = "${sourceSets.main.resources.srcDirs.find{ file("${it}/openapi.yaml").exists()}}/openapi.yaml".toString()
    outputDir = "${buildDir}/generated"
    apiPackage = "balihb.fifi.fib.api"
    invokerPackage = "balihb.fifi.fib.invoker"
    modelPackage = "balihb.fifi.fib.model"
    configOptions = [
        dateLibrary: "java8",
        interfaceOnly: true
        //apiFirst: true
    ]
    systemProperties = [
        apis: "false",
        models: ""
    ]
}

compileJava.dependsOn tasks.openApiGenerate
eclipseClasspath.dependsOn tasks.openApiGenerate

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}
